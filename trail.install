<?php

/**
 * Implements hook_schema();
 */
function trail_schema() {
  $schema['trail'] = array(
    'fields' => array(
      'tid' => array(
        'description' => 'The primary identifier for trail.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'created' => array(
        'description' => 'The Unix timestamp when the activation data record was created.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'changed' => array(
        'description' => 'The Unix timestamp when the activation data record was most recently updated.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'status' => array(
        'description' => 'Boolean indicating whether the trail is published (visible to non-administrators).',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 1,
      ),
    ),
    'primary key' => array('tid'),
  );

  return $schema;
}

function trail_install() {
  // Attach fields to trail entity
  foreach (trail_fields() as $field) {
    if (!field_info_field($field['field_base']['field_name'])) {
      field_create_field($field['field_base']);
      field_create_instance($field['field_instance']);
    }
  }

  // Create vocabularies
  trail_add_vocabularies();
}

function trail_fields() {
  $fields = array();

  // trail name
  $fields['trail_name'] = array(
    'field_base' => array(
      'field_name' => 'trail_name',
      'entity_types' => array(),
      'settings' => array(
        'max_length' => 255,
      ),
      'type' => 'text',
    ),
    'field_instance' => array(
      'entity_type' => 'trail',
      'bundle' => 'trail',
      'field_name' => 'trail_name',
      'default_value' => NULL,
      'label' => t('Name'),
      'required' => TRUE,
      'settings' => array(
        'text_processing' => 0,
      ),
      'widget' => array(
        'settings' => array(
          'size' => 60,
        ),
        'type' => 'text_textfield',
        'weight' => 0,
      ),
    ),
  );

  // trail status
  $fields['trail_status'] = array(
    'field_base' => array(
      'field_name' => 'trail_status',
      'entity_types' => array(),
      'type' => 'entityreference',
      'settings' => array(
        'target_type' => 'taxonomy_term',
        'handler_settings' => array(
          'target_bundles' => array(
            'trail_status' => 'trail_status'
          ),
        ),
        'behaviors' => array(
          'views-select-list' => array(
            'status' => 1,
          ),
        ),
      ),
    ),
    'field_instance' => array(
      'entity_type' => 'trail',
      'bundle' => 'trail',
      'field_name' => 'trail_status',
      'default_value' => NULL,
      'label' => t('Status'),
      'required' => TRUE,
      'widget' => array(
        'type' => 'options_select',
        'weight' => 1,
      ),
    ),
  );

  // trail type
  $fields['trail_difficulty'] = array(
    'field_base' => array(
      'field_name' => 'trail_difficulty',
      'entity_types' => array(),
      'type' => 'entityreference',
      'settings' => array(
        'target_type' => 'taxonomy_term',
        'handler_settings' => array(
          'target_bundles' => array(
            'trail_difficulty' => 'trail_difficulty'
          ),
        ),
        'behaviors' => array(
          'views-select-list' => array(
            'status' => 1,
          ),
        ),
      ),
    ),
    'field_instance' => array(
      'entity_type' => 'trail',
      'bundle' => 'trail',
      'field_name' => 'trail_difficulty',
      'default_value' => NULL,
      'label' => t('Difficulty'),
      'required' => TRUE,
      'widget' => array(
        'type' => 'options_select',
        'weight' => 2,
      ),
    ),
  );

  // trail groomed
  $fields['trail_groomed'] = array(
    'field_base' => array(
      'field_name' => 'trail_groomed',
      'entity_types' => array(),
      'settings' => array(
        'allowed_values' => array(0 => t('No'), 1 => t('Yes')),
      ),
      'type' => 'list_boolean',
    ),
    'field_instance' => array(
      'entity_type' => 'trail',
      'bundle' => 'trail',
      'field_name' => 'trail_groomed',
      'default_value' => NULL,
      'label' => t('Groomed'),
      'required' => TRUE,
      'widget' => array(
        'type' => 'options_buttons',
        'weight' => 3,
      ),
    ),
  );
  return $fields;
}

/**
 * Create taxonomies
 */
function trail_add_vocabularies() {
  $taxonomies = array(
    'trail_status' => array(
      'vocabulary' => (object) array(
        'name' => 'Trail Status',
        'description' => '',
        'machine_name' => 'trail_status',
      ),
      'terms' => array(
        'open' => (object) array(
          'name' => t('Open'),
          'weight' => 0,
        ),
        'closed' => (object) array(
          'name' => t('Closed'),
          'weight' => 1,
        ),
      ),
    ),
    'trail_difficulty' => array(
      'vocabulary' => (object) array(
        'name' => 'Trail difficulty',
        'description' => '',
        'machine_name' => 'trail_type',
      ),
      'terms' => array(
        'hard' => (object) array(
          'name' => t('Hard'),
          'weight' => 0,
        ),
        'easy' => (object) array(
          'name' => t('Easy'),
          'weight' => 0,
        ),
        'expert' => (object) array(
          'name' => t('Expert'),
          'weight' => 0,
        ),
        'moderate' => (object) array(
          'name' => t('Moderate'),
          'weight' => 0,
        ),
      ),
    ),
  );

  foreach ($taxonomies as $taxonomy) {
    $vocabulary = taxonomy_vocabulary_machine_name_load($taxonomy['vocabulary']->machine_name);

    // Create vocabulary
    if (empty($vocabulary)) {
      $status = taxonomy_vocabulary_save($taxonomy['vocabulary']);
      if ($status) {
        $vocabulary = taxonomy_vocabulary_machine_name_load($taxonomy['vocabulary']->machine_name);
        // Assign terms
        foreach ($taxonomy['terms'] as $term) {
          $term->vid = $vocabulary->vid;
          taxonomy_term_save($term);
        }
      }
    }
  }
}

/**
 * Implements hook_uninstall();
 */
function trail_uninstall() {
  field_attach_delete_bundle('trail', 'trail');
}